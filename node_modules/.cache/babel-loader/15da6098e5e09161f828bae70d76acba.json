{"ast":null,"code":"import _classCallCheck from \"/Users/Fulvio/Desktop/myGitHub/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Fulvio/Desktop/myGitHub/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Fulvio/Desktop/myGitHub/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Fulvio/Desktop/myGitHub/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Fulvio/Desktop/myGitHub/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Fulvio/Desktop/myGitHub/src/components/App.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport Profile from './github/Profile';\nimport Search from './github/Search';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      username: 'Dave',\n      userData: [],\n      userRepos: [],\n      perPage: 6\n    };\n    return _this;\n  } // Get data from github\n\n\n  _createClass(App, [{\n    key: \"getUserData\",\n    value: function getUserData() {\n      $.ajax({\n        url: 'https://api.github.com/users/' + this.state.username + '?client_id=' + this.props.clientId + '&client_secret=' + this.props.clientSecret,\n        dataType: 'json',\n        cache: false,\n        success: function (data) {\n          this.setState({\n            userData: data\n          });\n        }.bind(this),\n        error: function (xhr, status, err) {\n          this.setState({\n            username: null\n          });\n          alert(err);\n        }.bind(this)\n      });\n    } // Get user repos\n\n  }, {\n    key: \"getUserRepos\",\n    value: function getUserRepos() {\n      $.ajax({\n        url: 'https://api.github.com/users/' + this.state.username + '/repos?per_page=' + this.state.perPage + '&client_id=' + this.props.clientId + '&client_secret=' + this.props.clientSecret + '/sort=created',\n        dataType: 'json',\n        cache: false,\n        success: function (data) {\n          this.setState({\n            userRepos: data\n          });\n        }.bind(this),\n        error: function (xhr, status, err) {\n          this.setState({\n            username: null\n          });\n          alert(err);\n        }.bind(this)\n      });\n    }\n  }, {\n    key: \"handleFormSubmit\",\n    value: function handleFormSubmit(username) {\n      this.setState({\n        username: username\n      }, function () {\n        this.getUserData();\n        this.getUserRepos();\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserData();\n      this.getUserRepos();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(Search, {\n        onFormSubmit: this.handleFormSubmit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(Profile, Object.assign({}, this.state, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n/*\nApp.propTypes = {\n  clientId: React.PropTypes.string,\n  clientSecret: React.PropTypes.string\n};\n\nApp.defaultProps = {\n  clientId: '83376858f71f515775c8',\n  clientServer: 'f97cb4888960121034e5c049cb8dd27e385a1499'\n};\n*/\n\n\nexport default App;","map":{"version":3,"sources":["/Users/Fulvio/Desktop/myGitHub/src/components/App.js"],"names":["React","Component","$","Profile","Search","App","props","state","username","userData","userRepos","perPage","ajax","url","clientId","clientSecret","dataType","cache","success","data","setState","bind","error","xhr","status","err","alert","getUserData","getUserRepos","handleFormSubmit"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,MADC;AAEXC,MAAAA,QAAQ,EAAE,EAFC;AAGXC,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAFgB;AAQjB,G,CAED;;;;;kCACa;AACXT,MAAAA,CAAC,CAACU,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAE,kCAAgC,KAAKN,KAAL,CAAWC,QAA3C,GAAoD,aAApD,GAAkE,KAAKF,KAAL,CAAWQ,QAA7E,GAAsF,iBAAtF,GAAwG,KAAKR,KAAL,CAAWS,YADnH;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,KAAK,EAAE,KAHF;AAILC,QAAAA,OAAO,EAAE,UAASC,IAAT,EAAc;AACrB,eAAKC,QAAL,CAAc;AAACX,YAAAA,QAAQ,EAAEU;AAAX,WAAd;AACD,SAFQ,CAEPE,IAFO,CAEF,IAFE,CAJJ;AAOLC,QAAAA,KAAK,EAAE,UAASC,GAAT,EAAcC,MAAd,EAAsBC,GAAtB,EAA0B;AAC/B,eAAKL,QAAL,CAAc;AAACZ,YAAAA,QAAQ,EAAE;AAAX,WAAd;AACAkB,UAAAA,KAAK,CAACD,GAAD,CAAL;AACD,SAHM,CAGLJ,IAHK,CAGA,IAHA;AAPF,OAAP;AAYD,K,CAED;;;;mCACe;AACbnB,MAAAA,CAAC,CAACU,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAE,kCAAgC,KAAKN,KAAL,CAAWC,QAA3C,GAAoD,kBAApD,GAAuE,KAAKD,KAAL,CAAWI,OAAlF,GAA0F,aAA1F,GAAwG,KAAKL,KAAL,CAAWQ,QAAnH,GAA4H,iBAA5H,GAA8I,KAAKR,KAAL,CAAWS,YAAzJ,GAAsK,eADtK;AAELC,QAAAA,QAAQ,EAAE,MAFL;AAGLC,QAAAA,KAAK,EAAE,KAHF;AAILC,QAAAA,OAAO,EAAE,UAAUC,IAAV,EAAgB;AACvB,eAAKC,QAAL,CAAc;AAAEV,YAAAA,SAAS,EAAES;AAAb,WAAd;AACD,SAFQ,CAEPE,IAFO,CAEF,IAFE,CAJJ;AAOLC,QAAAA,KAAK,EAAE,UAAUC,GAAV,EAAeC,MAAf,EAAuBC,GAAvB,EAA4B;AACjC,eAAKL,QAAL,CAAc;AAAEZ,YAAAA,QAAQ,EAAE;AAAZ,WAAd;AACAkB,UAAAA,KAAK,CAACD,GAAD,CAAL;AACD,SAHM,CAGLJ,IAHK,CAGA,IAHA;AAPF,OAAP;AAYD;;;qCAEgBb,Q,EAAS;AACxB,WAAKY,QAAL,CAAc;AAACZ,QAAAA,QAAQ,EAAEA;AAAX,OAAd,EAAoC,YAAU;AAC5C,aAAKmB,WAAL;AACA,aAAKC,YAAL;AACD,OAHD;AAID;;;wCAEkB;AACjB,WAAKD,WAAL;AACA,WAAKC,YAAL;AACD;;;6BAEO;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKC,gBAAL,CAAsBR,IAAtB,CAA2B,IAA3B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,OAAD,oBAAa,KAAKd,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF;AAMD;;;;EA9DeN,S;AAgElB;;;;;;;;;;;;;AAWA,eAAeI,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport $ from 'jquery'; \nimport Profile from './github/Profile';\nimport Search from './github/Search';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      username: 'Dave',\n      userData: [],\n      userRepos: [],\n      perPage: 6\n    }\n  }\n\n  // Get data from github\n  getUserData(){\n    $.ajax({\n      url: 'https://api.github.com/users/'+this.state.username+'?client_id='+this.props.clientId+'&client_secret='+this.props.clientSecret,\n      dataType: 'json',\n      cache: false,\n      success: function(data){\n        this.setState({userData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        this.setState({username: null})\n        alert(err);\n      }.bind(this)\n    });\n  } \n\n  // Get user repos\n  getUserRepos() {\n    $.ajax({\n      url: 'https://api.github.com/users/'+this.state.username+'/repos?per_page='+this.state.perPage+'&client_id='+this.props.clientId+'&client_secret='+this.props.clientSecret+'/sort=created',\n      dataType: 'json',\n      cache: false,\n      success: function (data) {\n        this.setState({ userRepos: data });\n      }.bind(this),\n      error: function (xhr, status, err) {\n        this.setState({ username: null })\n        alert(err);\n      }.bind(this)\n    });\n  }\n\n  handleFormSubmit(username){\n    this.setState({username: username}, function(){\n      this.getUserData();\n      this.getUserRepos();\n    }); \n  }\n\n  componentDidMount(){\n    this.getUserData();\n    this.getUserRepos();\n  }\n\n  render(){\n    return(\n      <div>\n        <Search onFormSubmit={this.handleFormSubmit.bind(this)} />\n        <Profile {...this.state} />\n      </div>\n    )\n  }\n}\n/*\nApp.propTypes = {\n  clientId: React.PropTypes.string,\n  clientSecret: React.PropTypes.string\n};\n\nApp.defaultProps = {\n  clientId: '83376858f71f515775c8',\n  clientServer: 'f97cb4888960121034e5c049cb8dd27e385a1499'\n};\n*/\nexport default App;\n"]},"metadata":{},"sourceType":"module"}